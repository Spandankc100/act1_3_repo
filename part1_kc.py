# -*- coding: utf-8 -*-
"""Part1_KC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EZXU69KbFOWX4ZMg01NjMeMD7cOTuMA7
"""

# Step 1: Define the "empty" function
triangle_area = lambda b, h: ...

# Step 2: Define test cases
def test_triangle_area():
    # Add test cases
    assert triangle_area(0, 10) == 0, "Failed: Base 0"
    assert triangle_area(10, 0) == 0, "Failed: Height 0"
    assert triangle_area(3, 4) == 6, "Failed: Standard case"
    assert triangle_area(5, 7) == 17.5, "Failed: Another standard case"
    assert triangle_area(1, 1) == 0.5, "Failed: Small case"
    print("All test cases passed!")

# Step 3: Verify the empty function fails
try:
    test_triangle_area()
except Exception as e:
    print(f"Tests failed as expected: {e}")

# Step 4: Implement the correct lambda function
triangle_area = lambda b, h: 0.5 * b * h

# Re-run the tests
test_triangle_area()

# Step 5: Convert to a def function
def triangle_area(b, h):
    """
    Calculate the area of a right triangle.

    Parameters:
    b (float): The base of the triangle.
    h (float): The height of the triangle.

    Returns:
    float: The area of the triangle.
    """
    return 0.5 * b * h

# Step 6: Test the def function and verify docstring
test_triangle_area()
help(triangle_area)